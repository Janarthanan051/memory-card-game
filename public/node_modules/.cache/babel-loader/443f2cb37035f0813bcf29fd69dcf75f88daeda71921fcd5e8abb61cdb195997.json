{"ast":null,"code":"var _jsxFileName = \"C:\\\\game\\\\memory-card-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\"; // Ensure your CSS file is updated accordingly\n\n// Define card images with specific pairs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  src: \"/img/helmet-1.png\",\n  id: 1\n}, {\n  src: \"/img/potion-1.png\",\n  id: 2\n}, {\n  src: \"/img/ring-1.png\",\n  id: 3\n}, {\n  src: \"/img/scroll-1.png\",\n  id: 4\n}, {\n  src: \"/img/shield-1.png\",\n  id: 5\n}, {\n  src: \"/img/sword-1.png\",\n  id: 6\n}];\n\n// Define the pairs that can be chosen (only these will affect the score)\nconst specificPairs = [[1, 2],\n// Helmet and Potion\n[3, 4],\n// Ring and Scroll\n[5, 6] // Shield and Sword\n];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [score, setScore] = useState(0);\n  const [chances, setChances] = useState(10);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n    setScore(0); // Reset score\n    setChances(10); // Reset chances\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  // Handle card choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n\n        // Increase score by 1 for each correct match\n        setScore(prevScore => prevScore + 1);\n        resetTurn();\n      } else {\n        setChances(prevChances => prevChances - 1); // Decrease chances by 1\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // Reset choices and increase turn count\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // End the game if chances reach 0\n  useEffect(() => {\n    if (chances === 0) {\n      alert(`Game Over! Your score is ${score}. Try again.`);\n      shuffleCards();\n    }\n  }, [chances, score]);\n\n  // Start a new game automatically\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chances Left: \", chances]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ8aSIwUkk3pQUO454TZeijAscE=\");\n_c = App;\nfunction SingleCard({\n  card,\n  handleChoice,\n  flipped,\n  disabled\n}) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: flipped ? \"flipped\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"front\",\n        src: card.src,\n        alt: \"card front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"back\",\n        src: \"/img/cover.png\",\n        onClick: handleClick,\n        alt: \"card back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SingleCard;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","cardImages","src","id","specificPairs","App","_s","cards","setCards","turns","setTurns","score","setScore","chances","setChances","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","handleChoice","prevCards","matched","prevScore","resetTurn","prevChances","setTimeout","prevTurns","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SingleCard","flipped","_c","handleClick","alt","_c2","$RefreshReg$"],"sources":["C:/game/memory-card-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\"; // Ensure your CSS file is updated accordingly\r\n\r\n// Define card images with specific pairs\r\nconst cardImages = [\r\n  { src: \"/img/helmet-1.png\", id: 1 },\r\n  { src: \"/img/potion-1.png\", id: 2 },\r\n  { src: \"/img/ring-1.png\", id: 3 },\r\n  { src: \"/img/scroll-1.png\", id: 4 },\r\n  { src: \"/img/shield-1.png\", id: 5 },\r\n  { src: \"/img/sword-1.png\", id: 6 },\r\n];\r\n\r\n// Define the pairs that can be chosen (only these will affect the score)\r\nconst specificPairs = [\r\n  [1, 2], // Helmet and Potion\r\n  [3, 4], // Ring and Scroll\r\n  [5, 6], // Shield and Sword\r\n];\r\n\r\nfunction App() {\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [chances, setChances] = useState(10);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // Shuffle cards\r\n  const shuffleCards = () => {\r\n    const shuffledCards = [...cardImages, ...cardImages]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((card) => ({ ...card, id: Math.random() }));\r\n\r\n    setCards(shuffledCards);\r\n    setTurns(0);\r\n    setScore(0);  // Reset score\r\n    setChances(10);  // Reset chances\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n  };\r\n\r\n  // Handle card choice\r\n  const handleChoice = (card) => {\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\r\n  };\r\n\r\n  // Compare two selected cards\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true);\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        setCards((prevCards) => {\r\n          return prevCards.map((card) => {\r\n            if (card.src === choiceOne.src) {\r\n              return { ...card, matched: true };\r\n            } else {\r\n              return card;\r\n            }\r\n          });\r\n        });\r\n\r\n        // Increase score by 1 for each correct match\r\n        setScore((prevScore) => prevScore + 1);  \r\n        resetTurn();\r\n      } else {\r\n        setChances((prevChances) => prevChances - 1);  // Decrease chances by 1\r\n        setTimeout(() => resetTurn(), 1000);\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n\r\n  // Reset choices and increase turn count\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n    setDisabled(false);\r\n  };\r\n\r\n  // End the game if chances reach 0\r\n  useEffect(() => {\r\n    if (chances === 0) {\r\n      alert(`Game Over! Your score is ${score}. Try again.`);\r\n      shuffleCards();\r\n    }\r\n  }, [chances, score]);\r\n\r\n  // Start a new game automatically\r\n  useEffect(() => {\r\n    shuffleCards();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Memory Card Game</h1>\r\n      <button onClick={shuffleCards}>New Game</button>\r\n      <div className=\"stats\">\r\n        <p>Turns: {turns}</p>\r\n        <p>Score: {score}</p>\r\n        <p>Chances Left: {chances}</p>\r\n      </div>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <SingleCard\r\n            key={card.id}\r\n            card={card}\r\n            handleChoice={handleChoice}\r\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n            disabled={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        {/* Front of the card */}\r\n        <img className=\"front\" src={card.src} alt=\"card front\" />\r\n        {/* Back of the card */}\r\n        <img\r\n          className=\"back\"\r\n          src=\"/img/cover.png\"\r\n          onClick={handleClick}\r\n          alt=\"card back\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}