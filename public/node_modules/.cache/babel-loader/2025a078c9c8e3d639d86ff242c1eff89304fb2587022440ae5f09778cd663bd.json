{"ast":null,"code":"var _jsxFileName = \"C:\\\\game\\\\memory-card-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Define card values with colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardValues = [{\n  value: \"A\",\n  color: \"red\",\n  id: 1\n}, {\n  value: \"B\",\n  color: \"blue\",\n  id: 2\n}, {\n  value: \"C\",\n  color: \"green\",\n  id: 3\n}, {\n  value: \"D\",\n  color: \"yellow\",\n  id: 4\n}, {\n  value: \"E\",\n  color: \"purple\",\n  id: 5\n}, {\n  value: \"F\",\n  color: \"orange\",\n  id: 6\n}];\n\n// Shuffle and duplicate card values\nconst generateCards = () => {\n  return [...cardValues, ...cardValues].sort(() => Math.random() - 0.5).map(card => ({\n    ...card,\n    id: Math.random()\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [score, setScore] = useState(0);\n  const [chances, setChances] = useState(10);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards on component mount and reset\n  useEffect(() => {\n    setCards(generateCards());\n  }, []);\n\n  // Handle card choice\n  const handleChoice = card => {\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.value === choiceTwo.value) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.value === choiceOne.value) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        setScore(prevScore => prevScore + 1); // Increase score by 1\n        resetTurn();\n      } else {\n        setChances(prevChances => prevChances - 1); // Decrease chances by 1\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // Reset choices and increase turn count\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // End the game if chances reach 0\n  useEffect(() => {\n    if (chances === 0) {\n      alert(`Game Over! Your score is ${score}. Try again.`);\n      setCards(generateCards()); // Reset the game\n      setTurns(0);\n      setScore(0);\n      setChances(10);\n    }\n  }, [chances, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCards(generateCards()),\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chances Left: \", chances]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ8aSIwUkk3pQUO454TZeijAscE=\");\n_c = App;\nfunction SingleCard({\n  card,\n  handleChoice,\n  flipped,\n  disabled\n}) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: flipped ? \"flipped\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        style: {\n          backgroundColor: card.color\n        },\n        children: card.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SingleCard;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","cardValues","value","color","id","generateCards","sort","Math","random","map","card","App","_s","cards","setCards","turns","setTurns","score","setScore","chances","setChances","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","handleChoice","prevCards","matched","prevScore","resetTurn","prevChances","setTimeout","prevTurns","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SingleCard","flipped","_c","handleClick","style","backgroundColor","_c2","$RefreshReg$"],"sources":["C:/game/memory-card-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// Define card values with colors\r\nconst cardValues = [\r\n  { value: \"A\", color: \"red\", id: 1 },\r\n  { value: \"B\", color: \"blue\", id: 2 },\r\n  { value: \"C\", color: \"green\", id: 3 },\r\n  { value: \"D\", color: \"yellow\", id: 4 },\r\n  { value: \"E\", color: \"purple\", id: 5 },\r\n  { value: \"F\", color: \"orange\", id: 6 },\r\n];\r\n\r\n// Shuffle and duplicate card values\r\nconst generateCards = () => {\r\n  return [...cardValues, ...cardValues]\r\n    .sort(() => Math.random() - 0.5)\r\n    .map((card) => ({ ...card, id: Math.random() }));\r\n};\r\n\r\nfunction App() {\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [chances, setChances] = useState(10);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // Shuffle cards on component mount and reset\r\n  useEffect(() => {\r\n    setCards(generateCards());\r\n  }, []);\r\n\r\n  // Handle card choice\r\n  const handleChoice = (card) => {\r\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\r\n  };\r\n\r\n  // Compare two selected cards\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true);\r\n      if (choiceOne.value === choiceTwo.value) {\r\n        setCards((prevCards) => {\r\n          return prevCards.map((card) => {\r\n            if (card.value === choiceOne.value) {\r\n              return { ...card, matched: true };\r\n            } else {\r\n              return card;\r\n            }\r\n          });\r\n        });\r\n        setScore((prevScore) => prevScore + 1);  // Increase score by 1\r\n        resetTurn();\r\n      } else {\r\n        setChances((prevChances) => prevChances - 1);  // Decrease chances by 1\r\n        setTimeout(() => resetTurn(), 1000);\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n\r\n  // Reset choices and increase turn count\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n    setDisabled(false);\r\n  };\r\n\r\n  // End the game if chances reach 0\r\n  useEffect(() => {\r\n    if (chances === 0) {\r\n      alert(`Game Over! Your score is ${score}. Try again.`);\r\n      setCards(generateCards());  // Reset the game\r\n      setTurns(0);\r\n      setScore(0);\r\n      setChances(10);\r\n    }\r\n  }, [chances, score]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Memory Card Game</h1>\r\n      <button onClick={() => setCards(generateCards())}>New Game</button>\r\n      <div className=\"stats\">\r\n        <p>Turns: {turns}</p>\r\n        <p>Score: {score}</p>\r\n        <p>Chances Left: {chances}</p>\r\n      </div>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <SingleCard\r\n            key={card.id}\r\n            card={card}\r\n            handleChoice={handleChoice}\r\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n            disabled={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" onClick={handleClick}>\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        {/* Card front with color */}\r\n        <div className=\"card-front\" style={{ backgroundColor: card.color }}>\r\n          {card.value}\r\n        </div>\r\n        {/* Card back */}\r\n        <div className=\"card-back\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}