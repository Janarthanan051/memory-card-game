{"ast":null,"code":"var _jsxFileName = \"C:\\\\game\\\\memory-card-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Define card colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardColors = [\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"orange\", \"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"orange\"];\n\n// Generate cards with random colors\nconst generateCards = () => {\n  return cardColors.sort(() => Math.random() - 0.5).map((color, index) => ({\n    id: index,\n    color,\n    matched: false\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [score, setScore] = useState(0);\n  const [chances, setChances] = useState(10);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards on component mount and reset\n  useEffect(() => {\n    setCards(generateCards());\n  }, []);\n\n  // Handle card choice\n  const handleChoice = card => {\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.color === choiceTwo.color) {\n        setCards(prevCards => prevCards.map(card => {\n          if (card.color === choiceOne.color) {\n            return {\n              ...card,\n              matched: true\n            };\n          } else {\n            return card;\n          }\n        }));\n        setScore(prevScore => prevScore + 1); // Increase score by 1\n        resetTurn();\n      } else {\n        setChances(prevChances => prevChances - 1); // Decrease chances by 1\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // Reset choices and increase turn count\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // End the game if chances reach 0\n  useEffect(() => {\n    if (chances === 0) {\n      alert(`Game Over! Your score is ${score}. Try again.`);\n      setCards(generateCards()); // Reset the game\n      setTurns(0);\n      setScore(0);\n      setChances(10);\n    }\n  }, [chances, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCards(generateCards()),\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chances Left: \", chances]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ8aSIwUkk3pQUO454TZeijAscE=\");\n_c = App;\nfunction SingleCard({\n  card,\n  handleChoice,\n  flipped,\n  disabled\n}) {\n  const handleClick = () => {\n    if (!disabled && !flipped) {\n      handleChoice(card);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-inner ${flipped ? \"flipped\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        style: {\n          \"--card-color\": flipped ? card.color : \"black\"\n        } // Show color only if flipped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SingleCard;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","cardColors","generateCards","sort","Math","random","map","color","index","id","matched","App","_s","cards","setCards","turns","setTurns","score","setScore","chances","setChances","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","handleChoice","card","prevCards","prevScore","resetTurn","prevChances","setTimeout","prevTurns","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SingleCard","flipped","_c","handleClick","style","_c2","$RefreshReg$"],"sources":["C:/game/memory-card-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// Define card colors\r\nconst cardColors = [\r\n  \"red\",\r\n  \"blue\",\r\n  \"green\",\r\n  \"yellow\",\r\n  \"purple\",\r\n  \"orange\",\r\n  \"red\",\r\n  \"blue\",\r\n  \"green\",\r\n  \"yellow\",\r\n  \"purple\",\r\n  \"orange\",\r\n];\r\n\r\n// Generate cards with random colors\r\nconst generateCards = () => {\r\n  return cardColors\r\n    .sort(() => Math.random() - 0.5)\r\n    .map((color, index) => ({\r\n      id: index,\r\n      color,\r\n      matched: false\r\n    }));\r\n};\r\n\r\nfunction App() {\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [chances, setChances] = useState(10);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // Shuffle cards on component mount and reset\r\n  useEffect(() => {\r\n    setCards(generateCards());\r\n  }, []);\r\n\r\n  // Handle card choice\r\n  const handleChoice = (card) => {\r\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\r\n  };\r\n\r\n  // Compare two selected cards\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true);\r\n      if (choiceOne.color === choiceTwo.color) {\r\n        setCards((prevCards) =>\r\n          prevCards.map((card) => {\r\n            if (card.color === choiceOne.color) {\r\n              return { ...card, matched: true };\r\n            } else {\r\n              return card;\r\n            }\r\n          })\r\n        );\r\n        setScore((prevScore) => prevScore + 1); // Increase score by 1\r\n        resetTurn();\r\n      } else {\r\n        setChances((prevChances) => prevChances - 1); // Decrease chances by 1\r\n        setTimeout(() => resetTurn(), 1000);\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n\r\n  // Reset choices and increase turn count\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n    setDisabled(false);\r\n  };\r\n\r\n  // End the game if chances reach 0\r\n  useEffect(() => {\r\n    if (chances === 0) {\r\n      alert(`Game Over! Your score is ${score}. Try again.`);\r\n      setCards(generateCards()); // Reset the game\r\n      setTurns(0);\r\n      setScore(0);\r\n      setChances(10);\r\n    }\r\n  }, [chances, score]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Memory Card Game</h1>\r\n      <button onClick={() => setCards(generateCards())}>New Game</button>\r\n      <div className=\"stats\">\r\n        <p>Turns: {turns}</p>\r\n        <p>Score: {score}</p>\r\n        <p>Chances Left: {chances}</p>\r\n      </div>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <SingleCard\r\n            key={card.id}\r\n            card={card}\r\n            handleChoice={handleChoice}\r\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n            disabled={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled && !flipped) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" onClick={handleClick}>\r\n      <div className={`card-inner ${flipped ? \"flipped\" : \"\"}`}>\r\n        {/* Card front */}\r\n        <div\r\n          className=\"card-front\"\r\n          style={{ \"--card-color\": flipped ? card.color : \"black\" }} // Show color only if flipped\r\n        />\r\n        {/* Card back */}\r\n        <div className=\"card-back\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}