{"ast":null,"code":"var _jsxFileName = \"C:\\\\game\\\\memory-card-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Define card values with colors and values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardValues = [{\n  value: \"A\",\n  color: \"red\"\n}, {\n  value: \"B\",\n  color: \"blue\"\n}, {\n  value: \"C\",\n  color: \"green\"\n}, {\n  value: \"D\",\n  color: \"yellow\"\n}, {\n  value: \"E\",\n  color: \"purple\"\n}, {\n  value: \"F\",\n  color: \"orange\"\n}];\n\n// Shuffle and duplicate card values\nconst generateCards = () => {\n  return [...cardValues, ...cardValues].sort(() => Math.random() - 0.5).map(card => ({\n    ...card,\n    id: Math.random(),\n    matched: false\n  }));\n};\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [score, setScore] = useState(0);\n  const [chances, setChances] = useState(10);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards on component mount and reset\n  useEffect(() => {\n    setCards(generateCards());\n  }, []);\n\n  // Handle card choice\n  const handleChoice = card => {\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.value === choiceTwo.value) {\n        setCards(prevCards => prevCards.map(card => {\n          if (card.value === choiceOne.value) {\n            return {\n              ...card,\n              matched: true\n            };\n          } else {\n            return card;\n          }\n        }));\n        setScore(prevScore => prevScore + 1); // Increase score by 1\n        resetTurn();\n      } else {\n        setChances(prevChances => prevChances - 1); // Decrease chances by 1\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // Reset choices and increase turn count\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // End the game if chances reach 0\n  useEffect(() => {\n    if (chances === 0) {\n      alert(`Game Over! Your score is ${score}. Try again.`);\n      setCards(generateCards()); // Reset the game\n      setTurns(0);\n      setScore(0);\n      setChances(10);\n    }\n  }, [chances, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCards(generateCards()),\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chances Left: \", chances]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CZ8aSIwUkk3pQUO454TZeijAscE=\");\n_c = App;\nfunction SingleCard({\n  card,\n  handleChoice,\n  flipped,\n  disabled\n}) {\n  const handleClick = () => {\n    if (!disabled && !flipped) {\n      handleChoice(card);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-inner ${flipped ? \"flipped\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        style: {\n          backgroundColor: card.color\n        },\n        children: flipped && card.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SingleCard;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","cardValues","value","color","generateCards","sort","Math","random","map","card","id","matched","App","_s","cards","setCards","turns","setTurns","score","setScore","chances","setChances","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","handleChoice","prevCards","prevScore","resetTurn","prevChances","setTimeout","prevTurns","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SingleCard","flipped","_c","handleClick","style","backgroundColor","_c2","$RefreshReg$"],"sources":["C:/game/memory-card-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// Define card values with colors and values\r\nconst cardValues = [\r\n  { value: \"A\", color: \"red\" },\r\n  { value: \"B\", color: \"blue\" },\r\n  { value: \"C\", color: \"green\" },\r\n  { value: \"D\", color: \"yellow\" },\r\n  { value: \"E\", color: \"purple\" },\r\n  { value: \"F\", color: \"orange\" },\r\n];\r\n\r\n// Shuffle and duplicate card values\r\nconst generateCards = () => {\r\n  return [...cardValues, ...cardValues]\r\n    .sort(() => Math.random() - 0.5)\r\n    .map((card) => ({ ...card, id: Math.random(), matched: false }));\r\n};\r\n\r\nfunction App() {\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [chances, setChances] = useState(10);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // Shuffle cards on component mount and reset\r\n  useEffect(() => {\r\n    setCards(generateCards());\r\n  }, []);\r\n\r\n  // Handle card choice\r\n  const handleChoice = (card) => {\r\n    if (choiceOne && choiceOne.id === card.id) return; // Prevent selecting the same card\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\r\n  };\r\n\r\n  // Compare two selected cards\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true);\r\n      if (choiceOne.value === choiceTwo.value) {\r\n        setCards((prevCards) =>\r\n          prevCards.map((card) => {\r\n            if (card.value === choiceOne.value) {\r\n              return { ...card, matched: true };\r\n            } else {\r\n              return card;\r\n            }\r\n          })\r\n        );\r\n        setScore((prevScore) => prevScore + 1); // Increase score by 1\r\n        resetTurn();\r\n      } else {\r\n        setChances((prevChances) => prevChances - 1); // Decrease chances by 1\r\n        setTimeout(() => resetTurn(), 1000);\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n\r\n  // Reset choices and increase turn count\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n    setDisabled(false);\r\n  };\r\n\r\n  // End the game if chances reach 0\r\n  useEffect(() => {\r\n    if (chances === 0) {\r\n      alert(`Game Over! Your score is ${score}. Try again.`);\r\n      setCards(generateCards()); // Reset the game\r\n      setTurns(0);\r\n      setScore(0);\r\n      setChances(10);\r\n    }\r\n  }, [chances, score]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Memory Card Game</h1>\r\n      <button onClick={() => setCards(generateCards())}>New Game</button>\r\n      <div className=\"stats\">\r\n        <p>Turns: {turns}</p>\r\n        <p>Score: {score}</p>\r\n        <p>Chances Left: {chances}</p>\r\n      </div>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <SingleCard\r\n            key={card.id}\r\n            card={card}\r\n            handleChoice={handleChoice}\r\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n            disabled={disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled && !flipped) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" onClick={handleClick}>\r\n      <div className={`card-inner ${flipped ? \"flipped\" : \"\"}`}>\r\n        {/* Card front with color */}\r\n        <div\r\n          className=\"card-front\"\r\n          style={{ backgroundColor: card.color }}\r\n        >\r\n          {/* Show value if flipped */}\r\n          {flipped && card.value}\r\n        </div>\r\n        {/* Card back */}\r\n        <div className=\"card-back\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}